# Command Enhancements

# Utility
alias reload='source ~/.zshrc'

# Quicker cd
alias ..="cd .."

# My Code folder
edify() {
  if [ -f $DROPBOX_HOME/etc/api-edify.keys ]; then
    . $DROPBOX_HOME/etc/api-edify.keys
  fi
}
jarias() {
  if [ -f $DROPBOX_HOME/etc/api.keys ]; then
    . $DROPBOX_HOME/etc/api.keys
  fi
}

k() {
 if [[ "$*" =~ edify* ]]; then
 	edify
 else
 	jarias
 fi
 cd ~/Code/$1
}

_k() { _files -W ~/Code -/; }
compdef _k k

alias g='gradle'

# Common -- Some are from Damian Conway
alias ls="ls -G"
alias a='ls -A' # -A all except literal . ..
alias la="ls -A -l -G"
alias c='clear'
alias cdd='cd -'  # goto last dir cd'ed from
alias cl='clear; l'
function cdc() { 
    cd $1; ls 
}
alias cls='clear; ls'
alias h='history'
alias l.='ls -d .[^.]*'
alias l='ls -lhGt'  # -l long listing, most recent first
                    # -G color
alias lh="ls -lh"
alias ll='ls -lhG'  # -l long listing, human readable, no group info
alias lt='ls -lt' # sort with recently modified first
alias md='mkdir -p'
alias s='cd ..'   # up one dir

function take() {
    mkdir -p "$1"
    cd "$1" 
}

alias e='exit'
alias k9="killall -9"
function killnamed () {
	ps ax | grep $1 | cut -d ' ' -f 2 | xargs kill
}

function zipr() {
	zip -r $1.zip $1
}

# Finder
alias o='open . &'

# General code

# Processes
alias tu='top -o cpu' # cpu
alias tm='top -o vsize' # memory

# Git
alias ungit="find . -name '.git' -exec rm -rf {} \;"
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'

get_git_branch() {
  echo `git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
}

alias gpull='git pull origin `get_git_branch`'
alias gpush='git push origin `get_git_branch`'

alias gco='git checkout'
alias gd='git diff'
alias gdm='git diff master'
alias gl='git pull'
alias gnp="git-notpushed"
alias gp='git push'
alias gst='git status'
alias gt='git status'
alias eg='mate .git/config'

# Git clone from GitHub
function gch() {
	git clone git://github.com/$USER/$1.git
}

# Setup a tracking branch from [remote] [branch_name]
function gbt() { 
	git branch --track $2 $1/$2 && git checkout $2
}

# Quickly clobber a file and checkout
function grf() { 
	rm $1
	git checkout $1 
}

# Regenerate TAGS file from file arguments
function ct() {
	rm -f TAGS
	etags --append --output=TAGS $*
}

# Ruby
alias r="rake"
